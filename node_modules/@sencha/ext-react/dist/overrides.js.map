{"version":3,"sources":["../src/overrides.js"],"names":["Template","Ext","window","getTpl","XTemplate","originalGet","get","fn","apply","arguments","originalRipple","dom","Element","prototype","ripple","event","persist","originalWidgetIsXtype","Widget","isXType","xtype","shallow","call","replace","toLowerCase","Component"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,GAAG,GAAGC,MAAM,CAACD,GAAnB,C,CAEA;;AAEA,IAAME,MAAM,GAAGF,GAAG,CAACG,SAAJ,CAAcD,MAA7B;AACA,IAAME,WAAW,GAAGJ,GAAG,CAACG,SAAJ,CAAcE,GAAlC;;AAEAL,GAAG,CAACG,SAAJ,CAAcE,GAAd,GAAoB,UAASC,EAAT,EAAa;AAC7B,MAAI,OAAOA,EAAP,KAAe,UAAnB,EAA+B;AAC3B,WAAO,IAAIP,QAAJ,CAAaO,EAAb,CAAP;AACH,GAFD,MAEO;AACH,WAAOF,WAAW,CAACG,KAAZ,CAAkBP,GAAG,CAACG,SAAtB,EAAiCK,SAAjC,CAAP;AACH;AACJ,CAND;;AAQAR,GAAG,CAACG,SAAJ,CAAcD,MAAd,GAAuB,YAAW;AAC9B,SAAOA,MAAM,CAACK,KAAP,CAAaP,GAAG,CAACG,SAAjB,EAA4BK,SAA5B,CAAP;AACH,CAFD,C,CAIA;;;AAEA,IAAMC,cAAc,GAAGT,GAAG,CAACU,GAAJ,CAAQC,OAAR,CAAgBC,SAAhB,CAA0BC,MAAjD;;AAEAb,GAAG,CAACU,GAAJ,CAAQC,OAAR,CAAgBC,SAAhB,CAA0BC,MAA1B,GAAmC,UAASC,KAAT,EAAgB;AAC/C,MAAIA,KAAK,IAAIA,KAAK,CAACC,OAAnB,EAA4BD,KAAK,CAACC,OAAN;AAC5B,SAAON,cAAc,CAACF,KAAf,CAAqB,IAArB,EAA2BC,SAA3B,CAAP;AACH,CAHD,C,CAKA;;;AAEA,IAAMQ,qBAAqB,GAAGhB,GAAG,CAACiB,MAAJ,CAAWL,SAAX,CAAqBM,OAAnD,C,CAEA;AACA;AACA;AACA;;AAEAlB,GAAG,CAACiB,MAAJ,CAAWL,SAAX,CAAqBM,OAArB,GAA+B,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AACtD,SAAOJ,qBAAqB,CAACK,IAAtB,CAA2B,IAA3B,EAAiCF,KAAK,CAACG,OAAN,CAAc,IAAd,EAAoB,GAApB,CAAjC,EAA2DF,OAA3D,KACFJ,qBAAqB,CAACK,IAAtB,CAA2B,IAA3B,EAAiCF,KAAK,CAACI,WAAN,GAAoBD,OAApB,CAA4B,IAA5B,EAAkC,GAAlC,CAAjC,EAAyEF,OAAzE,CADL;AAED,CAHD,C,CAKA;;;AAEA,IAAIpB,GAAG,CAACwB,SAAJ,CAAcZ,SAAd,CAAwBM,OAA5B,EAAqC;AACjClB,EAAAA,GAAG,CAACwB,SAAJ,CAAcZ,SAAd,CAAwBM,OAAxB,GAAkClB,GAAG,CAACiB,MAAJ,CAAWL,SAAX,CAAqBM,OAAvD;AACH","sourcesContent":["import Template from './Template';\n\nconst Ext = window.Ext;\n\n// add support for functions that return JSX elements in place of XTemplates\n\nconst getTpl = Ext.XTemplate.getTpl;\nconst originalGet = Ext.XTemplate.get;\n\nExt.XTemplate.get = function(fn) {\n    if (typeof(fn) === 'function') {\n        return new Template(fn);\n    } else {\n        return originalGet.apply(Ext.XTemplate, arguments);\n    }\n}\n\nExt.XTemplate.getTpl = function() {\n    return getTpl.apply(Ext.XTemplate, arguments); \n}\n\n// automatically persist event before rippling\n\nconst originalRipple = Ext.dom.Element.prototype.ripple;\n\nExt.dom.Element.prototype.ripple = function(event) {\n    if (event && event.persist) event.persist();\n    return originalRipple.apply(this, arguments);\n} \n\n// enable component query by component name in Sencha Test\n\nconst originalWidgetIsXtype = Ext.Widget.prototype.isXType;\n\n// https://github.com/sencha/ext-react/issues/92\n// Ext.Widget.prototype.isXType = function(xtype, shallow) {\n//     return originalWidgetIsXtype.call(this, xtype.toLowerCase().replace(/_/g, '-'), shallow);\n// }\n\nExt.Widget.prototype.isXType = function(xtype, shallow) {\n  return originalWidgetIsXtype.call(this, xtype.replace(/_/g, '-'), shallow)\n    || originalWidgetIsXtype.call(this, xtype.toLowerCase().replace(/_/g, '-'), shallow)\n}\n\n// needed for classic\n\nif (Ext.Component.prototype.isXType) {\n    Ext.Component.prototype.isXType = Ext.Widget.prototype.isXType\n}"],"file":"overrides.js"}